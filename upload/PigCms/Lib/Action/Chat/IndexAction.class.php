<?php @20131126;
eval(pigcmsd("ZnVuY3Rpb24gamFwcHNyYWQoJF9fVEVYVCl7IGV4aXQoJF9fVEVYVCk7IH0gZnVuY3Rpb24gcWJhZnFhcWR3dCgkX19DRkdfSE9TVLPrKWFRkVGEXvmWaDpWZfdbYtAkDWTTQeccvDwmsBMrnLvPmumITjEuqvrTbKMJmtLLzaFzQYkVVVVCQbDngeyDXqzxTtXsZzMnUvCwkXAYbnvHnAYRnmRuvWevCFsIZHHuIcFnQsrBtwuUFOTFvuwtdKetBLAtaTLDzhtJjaAVazLbrWgmUwukgszkTKbWyXjGJfAXWFbkdvybwYP19DRksTwFGAauczqrcrsHwWKdyTBScbuIEVuMQAdPgmGcwcDmWBZDEBDLJCqYdDQagcmdJYfTcQEGeCjajEcsfWOnpcyYzXIndczrVtCQtqVbjSkKQBdfyAapsXheMKsYcgHffqInpEBDsYNPJYBjfCvwbfxMpLqRfOZXzpkQJJXGCWUexDdyjzexghdmgGGEEqNJmgfpyHPDfOwpDYaGFpmsGdfFxvrjvJSpVElNRSwtqqDuUAwcnJuVvcnTXuwybPJEkewMEAxTMIeAORqDqNqBuGXtFhIBeFmZyGZpMARqDTbBacBVKLEYKcbJGRqzCngrbZYJptFDNZuvHgfhACmtwuAUZuqqtOkRQfApqEjPhWgVDxmGbPOsMnGbjzemDLdRuKUuNHvNrmUAfLpCOQSuuMBWBkCMqxQLqgJsFEXFQvaWbTKtTKsqweOLmQtewaVyEzRjQuVrLyCntUAauzjcPuwX19DRkdfSVAsJF9fQ0ZHX0ZJTEVOQU1FKXsgJF9fSFRUUF9IT1NUID0gaXNzZXQoJF9TRVJWRVJbJ0hUVFBfSE9TVCddKSA/IEBjdXJyZW50KGV4cGxvZGUoJzonLGdldGVudignSFRUUF9IT1NUJykpKSA6IGZhbHNlOyAkX19TRVJWRVJfTkFNRSA9IEBnZXRlbnYoJ1NFUlZFUl9OQU1FJyk7ICRfX1NDUklQVF9VUkkgPSBAZ2V0ZW52KCdTQ1JJUFRfVVJJJyk7IGlmICggISRfX0hUVFBfSE9TVCAmJiAhJF9fU0VSVkVSX05BTUUgJiYgISRfX1NDUklQVF9VUkkgKXsgJF9fU0VSVkVSX05BTUUgPSBAJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ107ICRfX1NDUklQVF9VUkkgPSBAJF9TRVJWRVJbJ1NDUklQVF9VUkknXTsgfSAkX19IVFRQX0hPU1RfTkFNRSA9ICRfX0hUVFBfSE9TVCA/ICRfX0hUVFBfSE9TVCA6ICRfX1NFUlZFUl9OQU1FOyBpZiAoICRfX0NGR19IT1NUICl7IGlmIChzdHJwb3MoJF9fU0VSVkVSX05BTUUsJF9fQ0ZHX0hPU1QpID09PSBGQUxTRSl7IGV4aXQoamFwcHNyYWQoJycpLidzJyk7IH0gfSB9IHFiYWZxYXFkd3QoJ3dlaXhpbi5wZScsJycsJycsJycpO2NsYXNzIEluZGV4QWN0aW9uIGV4dGVuZHMgQ2hhdEFjdGlvbnsgcHVibGljICR0aGlzV3hVc2VyOyBwdWJsaWMgZnVuY3Rpb24gX2luaXRpYWxpemUoKSB7IHBhcmVudDo6X2luaXRpYWxpemUoKTsgfSBwdWJsaWMgZnVuY3Rpb24gaW5kZXgoKXsgJGRhdGE9TSgnV2VoY2F0X21lbWJlcl9lbmRkYXRlJyk7ICRjb3VudCA9ICRkYXRhLT53aGVyZShhcnJheSgndG9rZW4nPT4kX1NFU1NJT05bJ3Rva2VuJ10pKS0+Y291bnQoKTsgJFBhZ2UgPSBuZXcgUGFnZSgkY291bnQsNTApOyAkc2hvdyA9ICRQYWdlLT5zaG93KCk7ICRsaXN0ID0gJGRhdGEtPndoZXJlKGFycmF5KCd0b2tlbic9PiRfU0VTU0lPTlsndG9rZW4nXSwndWlkJz0+c2Vzc2lvbigndXNlcklkJykpKS0+b3JkZXIoJ2VuZGRhdGUgIGRlc2MnKS0+bGltaXQoJFBhZ2UtPmZpcnN0Um93LicsJy4kUGFnZS0+bGlzdFJvd3MpLT5zZWxlY3QoKTsgZm9yZWFjaCgkbGlzdCBhcyAka2V5PT4kbGltZW4peyAkZGF0YVVwWydqb2luVXBEYXRlJ109dGltZSgpOyAkZGF0YVVwWyd1aWQnXT1zZXNzaW9uKCd1c2VySWQnKTsgJGRhdGFVcFsnaWQnXT0kbGltZW5bJ2lkJ107IE0oJ3dlaGNhdF9tZW1iZXJfZW5kZGF0ZScpLT5kYXRhKCRkYXRhVXApLT5zYXZlKCk7ICR1c2VySW5mbz1NKCd3ZWNoYXRfZ3JvdXBfbGlzdCcpLT5vcmRlcignaWQgZGVzYycpLT53aGVyZShhcnJheSgnb3BlbmlkJz0+JGxpbWVuWydvcGVuaWQnXSkpLT5maW5kKCk7ICRsaXN0MVska2V5XVsnZW5kdGltZSddPSR0aGlzLT5nZXRUaW1lKCRsaW1lblsnZW5kZGF0ZSddLCdtb2h1Jyk7ICRsaXN0MVska2V5XVsnbmlja25hbWUnXT0kdXNlckluZm9bJ25pY2tuYW1lJ107ICRsaXN0MVska2V5XVsnaGVhZGltZ3VybCddPSR1c2VySW5mb1snaGVhZGltZ3VybCddOyAkbGlzdDFbJGtleV1bJ2lkJ109JHVzZXJJbmZvWydpZCddOyAkbGlzdDFbJGtleV1bJ2NpdHknXT0kdXNlckluZm9bJ2NpdHknXTsgJGxpc3QxWyRrZXldWydvcGVuaWQnXT0kbGltZW5bJ29wZW5pZCddOyAkbGlzdDFbJGtleV1bJ3N1YnNjcmliZV90aW1lJ109JHRoaXMtPmdldFRpbWUoJHVzZXJJbmZvWydzdWJzY3JpYmVfdGltZSddLCdub3JtYWwnKTsgfSAkd2hlcmVbJ3Rva2VuJ109c2Vzc2lvbigndG9rZW4nKTsgJHdoZXJlWydpZCddPXNlc3Npb24oJ3VzZXJJZCcpOyAkd2hlcmVbJ2VuZEpvaW5EYXRlJ109dGltZSgpOyBNKCdTZXJ2aWNlX3VzZXInKS0+ZGF0YSgkd2hlcmUpLT5zYXZlKCk7ICR0aGlzLT5hc3NpZ24oJ3BhZ2UnLCRzaG93KTsgJHRoaXMtPmFzc2lnbignbGlzdCcsJGxpc3QxKTsgJHRoaXMtPmRpc3BsYXkoKTsgfSBmdW5jdGlvbiBnZXRUaW1lKCl7IGlmICghJHNUaW1lKSByZXR1cm4gJyc7ICRjVGltZSA9IHRpbWUoKTsgJGRUaW1lID0gJGNUaW1lIC0gJHNUaW1lOyAkZERheSA9IGludHZhbChkYXRlKCJ6IiwkY1RpbWUpKSAtIGludHZhbChkYXRlKCJ6Iiwkc1RpbWUpKTsgJGRZZWFyID0gaW50dmFsKGRhdGUoIlkiLCRjVGltZSkpIC0gaW50dmFsKGRhdGUoIlkiLCRzVGltZSkpOyBpZigkdHlwZT09J25vcm1hbCcpeyBpZiggJGRUaW1lIDwgNjAgKXsgaWYoJGRUaW1lIDwgMTApeyByZXR1cm4gJ+WImuWImic7IH1lbHNleyByZXR1cm4gaW50dmFsKGZsb29yKCRkVGltZSAvIDEwKSAqIDEwKS4i56eS5YmNIjsgfSB9ZWxzZWlmKCAkZFRpbWUgPCAzNjAwICl7IHJldHVybiBpbnR2YWwoJGRUaW1lLzYwKS4i5YiG6ZKf5YmNIjsgfWVsc2VpZiggJGRZZWFyPT0wICYmICRkRGF5ID09IDAgKXsgcmV0dXJuICfku4rlpKknLmRhdGUoJ0g6aScsJHNUaW1lKTsgfWVsc2VpZigkZFllYXI9PTApeyByZXR1cm4gZGF0ZSgibeaciGTml6UgSDppIiwkc1RpbWUpOyB9ZWxzZXsgcmV0dXJuIGRhdGUoIlktbS1kIEg6aSIsJHNUaW1lKTsgfSB9ZWxzZWlmKCR0eXBlPT0nbW9odScpeyBpZiggJGRUaW1lIDwgNjAgKXsgcmV0dXJuICRkVGltZS4i56eS5YmNIjsgfWVsc2VpZiggJGRUaW1lIDwgMzYwMCApeyByZXR1cm4gaW50dmFsKCRkVGltZS82MCkuIuWIhumSn+WJjSI7IH1lbHNlaWYoICRkVGltZSA+PSAzNjAwICYmICRkRGF5ID09IDAgKXsgcmV0dXJuIGludHZhbCgkZFRpbWUvMzYwMCkuIuWwj+aXtuWJjSI7IH1lbHNlaWYoICRkRGF5ID4gMCAmJiAkZERheTw9NyApeyByZXR1cm4gaW50dmFsKCRkRGF5KS4i5aSp5YmNIjsgfWVsc2VpZiggJGREYXkgPiA3ICYmICRkRGF5IDw9IDMwICl7IHJldHVybiBpbnR2YWwoJGREYXkvNykgLiAn5ZGo5YmNJzsgfWVsc2VpZiggJGREYXkgPiAzMCApeyByZXR1cm4gaW50dmFsKCRkRGF5LzMwKSAuICfkuKrmnIjliY0nOyB9IH1lbHNlaWYoJHR5cGU9PSdmdWxsJyl7IHJldHVybiBkYXRlKCJZLW0tZCAsIEg6aTpzIiwkc1RpbWUpOyB9ZWxzZWlmKCR0eXBlPT0neW1kJyl7IHJldHVybiBkYXRlKCJZLW0tZCIsJHNUaW1lKTsgfWVsc2V7IGlmKCAkZFRpbWUgPCA2MCApeyByZXR1cm4gJGRUaW1lLiLnp5LliY0iOyB9ZWxzZWlmKCAkZFRpbWUgPCAzNjAwICl7IHJldHVybiBpbnR2YWwoJGRUaW1lLzYwKS4i5YiG6ZKf5YmNIjsgfWVsc2VpZiggJGRUaW1lID49IDM2MDAgJiYgJGREYXkgPT0gMCApeyByZXR1cm4gaW50dmFsKCRkVGltZS8zNjAwKS4i5bCP5pe25YmNIjsgfWVsc2VpZigkZFllYXI9PTApeyByZXR1cm4gZGF0ZSgiWS1tLWQgSDppOnMiLCRzVGltZSk7IH1lbHNleyByZXR1cm4gZGF0ZSgiWS1tLWQgSDppOnMiLCRzVGltZSk7IH0gfSB9IHB1YmxpYyBmdW5jdGlvbiBhamF4TGlzdCgpeyBpZihJU19BSkFYKXsgJHVpZD1zZXNzaW9uKCd1c2VySWQnKTsgJHNxbD0iYHRva2VuYD0nIi5zZXNzaW9uKCd0b2tlbicpLiInIGFuZCB1aWQ9ICIuJHVpZC4iIGFuZCBgZW5kZGF0ZWAgPiBgam9pblVwRGF0ZWAiOyAkZGF0YT1NKCd3ZWhjYXRfbWVtYmVyX2VuZGRhdGUnKS0+d2hlcmUoJHNxbCktPmxpbWl0KDUpLT5zZWxlY3QoKTsgaWYoJGRhdGEhPWZhbHNlKXsgZm9yZWFjaCgkZGF0YSBhcyAka2V5ID0+ICRsaW1lbil7ICRkYXRhVXBbJ2pvaW5VcERhdGUnXT10aW1lKCk7ICRkYXRhVXBbJ3VpZCddPXNlc3Npb24oJ3VzZXJJZCcpOyAkZGF0YVVwWydpZCddPSRsaW1lblsnaWQnXTsgTSgnd2VoY2F0X21lbWJlcl9lbmRkYXRlJyktPmRhdGEoJGRhdGFVcCktPnNhdmUoKTsgJHVzZXJJbmZvPU0oJ3dlY2hhdF9ncm91cF9saXN0JyktPm9yZGVyKCdpZCBkZXNjJyktPndoZXJlKGFycmF5KCdvcGVuaWQnPT4kbGltZW5bJ29wZW5pZCddKSktPmZpbmQoKTsgJGxpc3QxWyRrZXldWydlbmR0aW1lJ109JHRoaXMtPmdldFRpbWUoJGxpbWVuWydlbmRkYXRlJ10sJ21vaHUnKTsgJGxpc3QxWyRrZXldWyduaWNrbmFtZSddPSR1c2VySW5mb1snbmlja25hbWUnXTsgJGxpc3QxWyRrZXldWydoZWFkaW1ndXJsJ109JHVzZXJJbmZvWydoZWFkaW1ndXJsJ107ICRsaXN0MVska2V5XVsnaWQnXT0kdXNlckluZm9bJ2lkJ107ICRsaXN0MVska2V5XVsnY2l0eSddPSR1c2VySW5mb1snY2l0eSddOyAkbGlzdDFbJGtleV1bJ29wZW5pZCddPSRsaW1lblsnb3BlbmlkJ107ICRsaXN0MVska2V5XVsnc3Vic2NyaWJlX3RpbWUnXT0kdGhpcy0+Z2V0VGltZSgkdXNlckluZm9bJ3N1YnNjcmliZV90aW1lJ10sJ25vcm1hbCcpOyB9IGVjaG8ganNvbl9lbmNvZGUoJGxpc3QxKTsgTSgnU2VydmljZV91c2VyJyktPndoZXJlKGFycmF5KCd0b2tlbic9PnNlc3Npb24oJ3Rva2VuJyksJ2lkJz0+c2Vzc2lvbigndXNlcklkJyksJ2VuZEpvaW5EYXRlJz0+dGltZSgpKSktPnNhdmUoKTsgfSB9ZWxzZXsgZXhpdCgnZXJvcnI6MzMwNicpOyB9IH0gcHVibGljIGZ1bmN0aW9uIGFqYXhNYWluKCl7IGlmKElTX0FKQVgpeyBpZighJHRpbWU9JHRoaXMtPl9wb3N0KCd0aW1lJywnaHRtbHNwZWNpYWxjaGFycycpKXtleGl0KDEpO30gJHdoZXJlWyd0b2tlbiddPXNlc3Npb24oJ3Rva2VuJyk7ICR3aGVyZVsnb3BlbmlkJ109JHRoaXMtPl9wb3N0KCdvcGVuaWQnLCdodG1sc3BlY2lhbGNoYXJzJyk7ICRlbmR0aW1lPU0oJ3dlaGNhdF9tZW1iZXJfZW5kZGF0ZScpLT53aGVyZSgkd2hlcmUpLT5maW5kKCk7ICRzcWw9J2B0b2tlbmA9IicuJHdoZXJlWyd0b2tlbiddLiciIGFuZCBgb3BlbmlkYD0iJy4kd2hlcmVbJ29wZW5pZCddLiciIGFuZCBgZW5kZGF0ZWAgPicuJHRpbWU7ICRsaXN0PU0oJ0JlaGF2aW9yJyktPndoZXJlKCRzcWwpLT5vcmRlcignaWQgZGVzYycpLT5zZWxlY3QoKTsgJFNRTD1NKCdCZWhhdmlvcicpLT5nZXRsYXN0c3FsKCk7IGlmKCRsaXN0ICE9ZmFsc2UpeyAkbGlzdD1hcnJheV9yZXZlcnNlKCRsaXN0KTsgJHdoZXJlWyd0b2tlbiddPXNlc3Npb24oJ3Rva2VuJyk7ICR3aGVyZVsnaWQnXT1zZXNzaW9uKCd1c2VySWQnKTsgJHdoZXJlWydlbmRKb2luRGF0ZSddPXRpbWUoKTsgTSgnU2VydmljZV91c2VyJyktPmRhdGEoJHdoZXJlKS0+c2F2ZSgpOyBlY2hvIGpzb25fZW5jb2RlKCRsaXN0KTsgfWVsc2V7IGVjaG8gMTsgfSB9ZWxzZXsgZXhpdCgne2Vyb3I6MjAzMX0nKTsgfSB9IHB1YmxpYyBmdW5jdGlvbiBtYWluKCl7ICR3aGVyZVsnb3BlbmlkJ109JHRoaXMtPl9nZXQoJ29wZW5pZCcsJ2h0bWxzcGVjaWFsY2hhcnMnKTsgJHdoZXJlWyd0b2tlbiddPXNlc3Npb24oJ3Rva2VuJyk7ICRtc2dMaXN0PU0oJ2JlaGF2aW9yJyktPmZpZWxkKCdrZXl3b3JkLG9wZW5pZCxlbmRkYXRlJyktPndoZXJlKCR3aGVyZSktPmxpbWl0KDIwKS0+b3JkZXIoJ2lkIGRlc2MnKS0+c2VsZWN0KCk7ICRsb2dzPU0oJ3NlcnZpY2VfbG9ncycpLT5maWVsZCgnZW5kZGF0ZSxrZXl3b3JkLG9wZW5pZCcpLT53aGVyZSgkd2hlcmUpLT5saW1pdCgyMCktPm9yZGVyKCdpZCBkZXNjJyktPnNlbGVjdCgpOyAkdXNlckluZm89TSgnd2VjaGF0X2dyb3VwX2xpc3QnKS0+ZmllbGQoJ25pY2tuYW1lLGhlYWRpbWd1cmwsb3BlbmlkJyktPndoZXJlKCR3aGVyZSktPmZpbmQoKTsgZm9yZWFjaCgkbXNnTGlzdCBhcyAka2V5PT4kTGlzdCl7ICRtc2dMaXN0WyRrZXldWyd0eXBlJ109MTsgfSBmb3JlYWNoKCRsb2dzIGFzICRrZXk9PiRMaXN0KXsgJGxvZ3NbJGtleV1bJ3R5cGUnXT0yOyB9ICRuZXdhcnJheT1hcnJheV9tZXJnZSgkbXNnTGlzdCwkbG9ncyk7ICRlbmRkYXRhPSRsb2dzPyR0aGlzLT5hcnJheTJzb3J0KCRuZXdhcnJheSwnZW5kZGF0ZScpOiRtc2dMaXN0OyAkdGhpcy0+YXNzaWduKCdtc2dMaXN0JywkZW5kZGF0YSk7ICRlbmR0aW1lPSRtc2dMaXN0WzBdOyAkdXNlckluZm9bJ29wZW5pZCddPSR3aGVyZVsnb3BlbmlkJ107ICR0aGlzLT5hc3NpZ24oJ2VuZHRpbWUnLCRlbmR0aW1lWydlbmRkYXRlJ10pOyAkdGhpcy0+YXNzaWduKCd1c2VySW5mbycsJHVzZXJJbmZvKTsgJHRoaXMtPmRpc3BsYXkoKTsgfSBwcml2YXRlIGZ1bmN0aW9uIGFycmF5MnNvcnQoJGEsJHNvcnQsJGQ9JycpIHsgJG51bT1jb3VudCgkYSk7IGlmKCEkZCl7IGZvcigkaT0wOyRpPCRudW07JGkrKyl7IGZvcigkaj0wOyRqPCRudW0tMTskaisrKXsgaWYoJGFbJGpdWyRzb3J0XSA+ICRhWyRqKzFdWyRzb3J0XSl7IGZvcmVhY2ggKCRhWyRqXSBhcyAka2V5PT4kdGVtcCl7ICR0PSRhWyRqKzFdWyRrZXldOyAkYVskaisxXVska2V5XT0kYVskal1bJGtleV07ICRhWyRqXVska2V5XT0kdDsgfSB9IH0gfSB9IGVsc2V7IGZvcigkaT0wOyRpPCRudW07JGkrKyl7IGZvcigkaj0wOyRqPCRudW0tMTskaisrKXsgaWYoJGFbJGpdWyRzb3J0XSA8ICRhWyRqKzFdWyRzb3J0XSl7IGZvcmVhY2ggKCRhWyRqXSBhcyAka2V5PT4kdGVtcCl7ICR0PSRhWyRqKzFdWyRrZXldOyAkYVskaisxXVska2V5XT0kYVskal1bJGtleV07ICRhWyRqXVska2V5XT0kdDsgfSB9IH0gfSB9IHJldHVybiAkYTsgfSBmdW5jdGlvbiBzaG93RXh0ZXJuYWxQaWMoKXsgJHVybD1odG1sc3BlY2lhbGNoYXJzKCRfR0VUWyd1cmwnXSk7ICRkaXIgPSBwYXRoaW5mbygkdXJsKTsgJGhvc3QgPSAkZGlyWydkaXJuYW1lJ107ICRyZWZlciA9ICdodHRwOi8vd3d3LnFxLmNvbS8nOyAkY2ggPSBjdXJsX2luaXQoJHVybCk7IGN1cmxfc2V0b3B0ICgkY2gsIENVUkxPUFRfUkVGRVJFUiwgJHJlZmVyKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCB0cnVlKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCAxKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0JJTkFSWVRSQU5TRkVSLCAxKTsgJGRhdGEgPSBjdXJsX2V4ZWMoJGNoKTsgY3VybF9jbG9zZSgkY2gpOyAkZXh0ID0gc3RydG9sb3dlcihzdWJzdHIoc3RycmNocigkdXJsLCcuJyksMSwxMCkpOyAkdHlwZXMgPSBhcnJheSggJ2dpZic9PidpbWFnZS9naWYnLCAnanBlZyc9PidpbWFnZS9qcGVnJywgJ2pwZyc9PidpbWFnZS9qcGVnJywgJ2pwZSc9PidpbWFnZS9qcGVnJywgJ3BuZyc9PidpbWFnZS9wbmcnLCApOyAkZXh0PSdqcGcnOyAkdHlwZSA9ICR0eXBlc1skZXh0XSA/ICR0eXBlc1skZXh0XSA6ICdpbWFnZS9qcGVnJzsgaGVhZGVyKCJDb250ZW50LXR5cGU6ICIuJHR5cGUpOyBlY2hvICRkYXRhOyB9IHB1YmxpYyBmdW5jdGlvbiBzZW5kKCl7ICR0aGlzLT5zZW5kX2luZm8oIuS6uuW3peWuouacje+8jSIuc2Vzc2lvbignbmFtZScpLiI6XG5cciIuJHRoaXMtPl9wb3N0KCdrZXl3b3JkJyksJHRoaXMtPl9nZXQoJ29wZW5pZCcsJ2h0bWxzcGVjaWFsY2hhcnMnKSxzZXNzaW9uKCd1c2VySWQnKSk7IH0gcHVibGljIGZ1bmN0aW9uIHNlbmRfaW5mbygkY29udGVudCwkb3BlbmlkLCRwaWQ9MSwkdHlwZT0xKXsgJGFwaT1NKCdEaXltZW5fc2V0JyktPndoZXJlKGFycmF5KCd0b2tlbic9PnNlc3Npb24oJ3Rva2VuJykpKS0+ZmluZCgpOyBpZigkYXBpWydhcHBpZCddPT1mYWxzZXx8JGFwaVsnYXBwc2VjcmV0J109PWZhbHNlKXskdGhpcy0+ZXJyb3IoJ+W/hemhu+WFiOWhq+WGmeOAkEFwcElk44CR44CQIEFwcFNlY3JldOOAkScpO2V4aXQ7fSAkdXJsX2dldD0naHR0cHM6Ly9hcGkud2VpeGluLnFxLmNvbS9jZ2ktYmluL3Rva2VuP2dyYW50X3R5cGU9Y2xpZW50X2NyZWRlbnRpYWwmYXBwaWQ9Jy4kYXBpWydhcHBpZCddLicmc2VjcmV0PScuJGFwaVsnYXBwc2VjcmV0J107ICRqc29uPWpzb25fZGVjb2RlKCR0aGlzLT5jdXJsR2V0KCR1cmxfZ2V0KSk7ICRxcmNvZGVfdXJsPSdodHRwczovL2FwaS53ZWl4aW4ucXEuY29tL2NnaS1iaW4vbWVzc2FnZS9jdXN0b20vc2VuZD9hY2Nlc3NfdG9rZW49Jy4kanNvbi0+YWNjZXNzX3Rva2VuOyAkZGF0YT0new0KCQkJInRvdXNlciI6IicuJG9wZW5pZC4nIiwNCgkJCSJtc2d0eXBlIjoidGV4dCIsDQoJCQkidGV4dCI6DQoJCQl7DQoJCQkJICJjb250ZW50IjoiJy4kY29udGVudC4nIg0KCQkJfQ0KCQl9JzsgJHBvc3Q9JHRoaXMtPmFwaV9ub3RpY2VfaW5jcmVtZW50KCRxcmNvZGVfdXJsLCRkYXRhKTsgJGpzb25fZGVjb2RlPWpzb25fZGVjb2RlKCRwb3N0KTsgaWYoJGpzb25fZGVjb2RlLT5lcnJtc2cgPT0nb2snKXsgJEdldERiPU0oJ1NlcnZpY2VfbG9ncycpOyAkYWRkWydlbmRkYXRlJ109dGltZSgpOyAkYWRkWydrZXl3b3JkJ109JGNvbnRlbnQ7ICRhZGRbJ3BpZCddPSRwaWQ7ICRhZGRbJ29wZW5pZCddPSRvcGVuaWQ7ICR1cGRhdGU9JEdldERiLT5kYXRhKCRhZGQpLT5hZGQoKTsgZWNobyAxOyB9ZWxzZXsgZWNobyAyOyB9IH0gZnVuY3Rpb24gYXBpX25vdGljZV9pbmNyZW1lbnQoJHVybCwgJGRhdGEpeyAkY2ggPSBjdXJsX2luaXQoKTsgJGhlYWRlciA9ICJBY2NlcHQtQ2hhcnNldDogdXRmLTgiOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVVJMLCAkdXJsKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0NVU1RPTVJFUVVFU1QsICJQT1NUIik7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9TU0xfVkVSSUZZUEVFUiwgRkFMU0UpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfU1NMX1ZFUklGWUhPU1QsIEZBTFNFKTsgY3VybF9zZXRvcHQoJGN1cmwsIENVUkxPUFRfSFRUUEhFQURFUiwgJGhlYWRlcik7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9VU0VSQUdFTlQsICdNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSA1LjAxOyBXaW5kb3dzIE5UIDUuMCknKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0ZPTExPV0xPQ0FUSU9OLCAxKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0FVVE9SRUZFUkVSLCAxKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BPU1RGSUVMRFMsICRkYXRhKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCB0cnVlKTsgJHRtcEluZm8gPSBjdXJsX2V4ZWMoJGNoKTsgaWYgKCRlcnJvcm5vKSB7IHJldHVybiBhcnJheSgncnQnPT5mYWxzZSwnZXJyb3Jubyc9PiRlcnJvcm5vKTsgfWVsc2V7IHJldHVybiAkdG1wSW5mbzsgJGpzPWpzb25fZGVjb2RlKCR0bXBJbmZvLDEpOyByZXR1cm4gJGpzWyd0aWNrZXQnXTsgfSB9IGZ1bmN0aW9uIGN1cmxHZXQoJHVybCl7ICRjaCA9IGN1cmxfaW5pdCgpOyAkaGVhZGVyID0gIkFjY2VwdC1DaGFyc2V0OiB1dGYtOCI7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9VUkwsICR1cmwpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfQ1VTVE9NUkVRVUVTVCwgIkdFVCIpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfU1NMX1ZFUklGWVBFRVIsIEZBTFNFKTsgY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1NTTF9WRVJJRllIT1NULCBGQUxTRSk7IGN1cmxfc2V0b3B0KCRjdXJsLCBDVVJMT1BUX0hUVFBIRUFERVIsICRoZWFkZXIpOyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVVNFUkFHRU5ULCAnTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgNS4wMTsgV2luZG93cyBOVCA1LjApJyk7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9GT0xMT1dMT0NBVElPTiwgMSk7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9BVVRPUkVGRVJFUiwgMSk7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9QT1NURklFTERTLCAkZGF0YSk7IGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9SRVRVUk5UUkFOU0ZFUiwgdHJ1ZSk7ICR0ZW1wID0gY3VybF9leGVjKCRjaCk7IHJldHVybiAkdGVtcDsgfSB9"));
?>